@model IEnumerable<Vehiculos.Models.Vehicle.Vehicles>

@{
    ViewData["Title"] = "Index";
}

<h1 class="text-center my-4">Listado de Vehículos</h1>

<div class="container">
    <div class="row mb-3">
        <div class="col-md-4">
            <input type="text" id="filterModel" class="form-control" placeholder="Filtrar por modelo">
        </div>
        <div class="col-md-4">
            <input type="text" id="filterBrand" class="form-control" placeholder="Filtrar por marca">
        </div>
        <div class="col-md-4">
            <input type="number" id="filterYear" class="form-control" placeholder="Filtrar por año">
        </div>
    </div>
</div>

<p class="text-end">
    <a asp-action="Create" class="btn btn-primary">Crear Nuevo</a>
</p>

<table class="table table-striped table-bordered text-center" id="vehiclesTable">
    <thead class="table-dark">
        <tr>
            <th>#</th>
            <th>@Html.DisplayNameFor(model => model.Model)</th>
            <th>@Html.DisplayNameFor(model => model.Brand)</th>
            <th>@Html.DisplayNameFor(model => model.EngineCapacity)</th>
            <th>@Html.DisplayNameFor(model => model.Type)</th>
            <th>@Html.DisplayNameFor(model => model.Color)</th>
            <th>@Html.DisplayNameFor(model => model.Price)</th>
            <th>@Html.DisplayNameFor(model => model.Year)</th>
            <th>@Html.DisplayNameFor(model => model.Plate)</th>
            <th>@Html.DisplayNameFor(model => model.Status)</th>
            <th>@Html.DisplayNameFor(model => model.Owner)</th>
            <th>Acciones</th>
        </tr>
    </thead>
    <tbody>
        @{
            int count = 1;
        }
        @foreach (var item in Model)
        {
            <tr>
                <td>@count</td>
                <td>@Html.DisplayFor(modelItem => item.Model)</td>
                <td>@Html.DisplayFor(modelItem => item.Brand)</td>
                <td>@Html.DisplayFor(modelItem => item.EngineCapacity)</td>
                <td>@Html.DisplayFor(modelItem => item.Type)</td>
                <td>@Html.DisplayFor(modelItem => item.Color)</td>
                <td>@Html.DisplayFor(modelItem => item.Price)</td>
                <td>@Html.DisplayFor(modelItem => item.Year)</td>
                <td>@Html.DisplayFor(modelItem => item.Plate)</td>
                <td>@Html.DisplayFor(modelItem => item.Status)</td>
                <td>@Html.DisplayFor(modelItem => item.Owner.Id)</td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning btn-sm">Editar</a>
                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info btn-sm">Detalles</a>
                    <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger btn-sm">Eliminar</a>
                </td>
            </tr>
            count++;
        }
    </tbody>
</table>

<!-- Paginación -->
<nav>
    <ul class="pagination justify-content-center">
        <li class="page-item"><a class="page-link" href="#" id="prevPage">Anterior</a></li>
        <li class="page-item"><a class="page-link" href="#" id="nextPage">Siguiente</a></li>
    </ul>
</nav>

@section Scripts {
    <script>
        $(document).ready(function() {
            let itemsPerPage = 10;
            let currentPage = 1;
            let rows = $('#vehiclesTable tbody tr');
            let totalPages = Math.ceil(rows.length / itemsPerPage);

            function showPage(page) {
                rows.hide();
                rows.slice((page - 1) * itemsPerPage, page * itemsPerPage).show();
            }

            function updatePagination() {
                $('#prevPage').parent().toggleClass('disabled', currentPage === 1);
                $('#nextPage').parent().toggleClass('disabled', currentPage === totalPages);
            }

            $('#prevPage').click(function(e) {
                e.preventDefault();
                if (currentPage > 1) {
                    currentPage--;
                    showPage(currentPage);
                    updatePagination();
                }
            });

            $('#nextPage').click(function(e) {
                e.preventDefault();
                if (currentPage < totalPages) {
                    currentPage++;
                    showPage(currentPage);
                    updatePagination();
                }
            });

            showPage(currentPage);
            updatePagination();

            $('#filterModel, #filterBrand, #filterYear').on('keyup change', function() {
                let modelFilter = $('#filterModel').val().toLowerCase();
                let brandFilter = $('#filterBrand').val().toLowerCase();
                let yearFilter = $('#filterYear').val();

                rows.hide().filter(function() {
                    let model = $(this).find('td:nth-child(2)').text().toLowerCase();
                    let brand = $(this).find('td:nth-child(3)').text().toLowerCase();
                    let year = $(this).find('td:nth-child(8)').text();
                    return model.includes(modelFilter) && brand.includes(brandFilter) && (yearFilter === '' || year.includes(yearFilter));
                }).show();
            });
        });
    </script>
}
